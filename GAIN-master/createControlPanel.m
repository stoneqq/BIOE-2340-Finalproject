%Version 9/18/16


function [edit_box, nextActionTextbox, hControlPanel,Handles,hSlider,wControlPanel,hgtControlPanel, pushButtonHandle]=createControlPanel(oneParameterArr, buttonLabel,forwardCallbackHandle,backCallbackHandle, saveCallbackHandle, quitCallbackHandle, batchCallbackHandle, parameterCallbackHandle, sliderCallbackHandle,editBoxCallbackHandle)
hControlPanel=figure;
screensize = get( groot, 'Screensize' );%get the user's screen resolution
wScreen = screensize(3); %screen width
hScreen = screensize(4);%screen height

wControlPanel_rel = 0.29;%control panel width relative to the screen (0.27 - 7/6)
hgtControlPanel_rel = 0.82;%control panel height relative to the screen

% wControlPanel = wControlPanel_rel * wScreen;%control panel width in pixels
% hgtControlPanel = hgtControlPanel_rel * hScreen;%control panel height in pixels
%On any PC or Mac, the relative position of the control panel on the screen
%is fixed, since its position is normalized; the relative position of each 
%object on control panel is also fixed, since normalized positions are 
%calibrated on Quentin's laptop
wControlPanel = 396.14; %calibration based on Quentin's laptop ( = wControlPanel_rel * wScreen)
hgtControlPanel = 629.76;%calibration 

%fix the relative position of each object on control panel
format long 
leftMargin=20/wControlPanel;
bottomMargin=10/hgtControlPanel;
pushButtonWidth=160/wControlPanel;
pushButtonHeight=30/hgtControlPanel;
horizontalSpace=20/wControlPanel;
fileNameBoxWidth = 340/wControlPanel; %originally 330 (6/27/16)
editBoxHeight=16/hgtControlPanel;%9.10.16
editBoxWidth=80/wControlPanel;
verticalSpace=20/hgtControlPanel;  %spacing between edit boxes 
textBoxHeight=editBoxHeight;  %parameter text box height and edit box height should match
textBoxWidth=240/wControlPanel; % 250
instructionBoxWidth=10/wControlPanel; %instruciton for parameters (90 to 10 - 7/6 to remove the instruction)
buttonGap = 10/hgtControlPanel; %the vertical gap between buttons
sliderGap = 17/hgtControlPanel; %vertical gap below the corresponding edit box
sliderHeight = 15/hgtControlPanel; 

totalwidth = leftMargin*2 + editBoxWidth + horizontalSpace + textBoxWidth + ...
             instructionBoxWidth;% replaced with wControlPanel
         
% 11 parameter explanation messages; ideally put it under oneParameterArr          
% paraExplanation = {sprintf('%s\n%s\n%s\n%s', 'This parameter is a threshold factor used for nuclei segmentation by Otsu¡¯s method.', 'Low: Segment more nuclei', 'High:Segment fewer  nuclei', 'Setting this parameter to ¡°inf¡±  (without quotation marks) effectively skips this image processing step.'),...
%     sprintf('%s\n%s\n%s\n%s', 'This parameter is a second threshold factor used to adjust the previous segmentation.', 'Low: Segment more individual nuclei', 'High:Segment fewer individual nuclei', 'Setting this parameter to ¡°inf¡± (without quotation marks) effectively skips this image processing step.'),...
%     sprintf('%s\n%s\n%s\n%s\n%s', 'This parameter specifies the radius of the disk used during morphological opening to separate weakly connected nucleus objects', 'Notice: this parameter must be a positive integer.', 'Low: Fewer nuclei are separated', 'High:More nuclei are separated', 'Setting this parameter to 1 effectively skips this image processing step.'),...
%     sprintf('%s\n%s\n%s\n%s', 'This parameter is a threshold that separates clustered nuclei from non-clustered nuclei', 'Notice: this parameter must be positive and not greater than 1 .', 'Low: Fewer objects are identified as nuclei clusters', 'High:More objects are identified as nuclei clusters'),...
%     sprintf('%s\n%s\n%s', 'This parameter adjusts the typical nucleus area used to calculate nucleus counts.', 'Low: Higher nuclei count per identified cluster', 'High:Lower nuclei count per identified cluster'),...
%     sprintf('%s\n%s\n%s', 'The typical nucleus area is multiplied by this parameter to determine the minimum size of a single nucleus.', 'Low: Smaller objects considered to be nuclei', 'High:Larger objects considered to be nuclei'),...
%     sprintf('%s\n%s\n%s\n%s', 'This parameter is a threshold factor used for cell body segmentation by Otsu¡¯s method.', 'Low: Include more pixels as parts of cell bodies', 'High:Include fewer pixels as parts of cell bodies', 'Setting this parameter to ¡°inf¡± (without quotation marks) effectively skips this image processing step.'),...
%     sprintf('%s\n%s\n%s\n%s\n%s', 'This parameter controls the size of the disk used to isolate cell bodies from neurites.', 'Notice: this parameter must be a positive integer.', 'Low: Remove fewer neurites;Narrower neurites ', 'High:Remove more neurites;Wider neurites', 'Setting this parameter to 1 effectively skips this image processing step.'),...
%     sprintf('%s\n%s\n%s\n%s', 'This parameter is a threshold factor used solely for neurite segmentation by Otsu¡¯s method.','Low: Include more pixels as parts of neurites', 'High:Include fewer pixels as parts of neurites', 'Setting this parameter to ¡°inf¡± (without quotation marks) effectively skips this image processing step.'),...
%     sprintf('%s\n%s\n%s\n%s', 'This parameter is a second threshold factor used solely for neurite segmentation by edge detection', 'Low: Capture more additional neurites', 'High:Capture fewer additional neurites', 'Setting this parameter to ¡°inf¡± (without quotation marks) effectively skips this image processing step.'),...
%     sprintf('%s\n%s\n%s\n%s\n%s', 'This parameter indicates the side length of a square used to join nearby neurite sections by morphological closing.',  'Notice: this parameter must be a positive integer.', 'Low: Bridge smaller gaps between neurites', 'High:Bridge larger gaps between neurites', 'Setting this parameter to 1 effectively skips this image processing step.'),...
%     };    
         
         
   
savepushButtonHandle=uicontrol('Style','pushbutton',...
    'units', 'normalized',...
    'string','Save Current Parameters',...
    'position',[leftMargin bottomMargin pushButtonWidth pushButtonHeight],...
    'callback',saveCallbackHandle);
batchpushButtonHandle=uicontrol('Style','pushbutton',...
    'units', 'normalized',...
    'string','Exit to Batch Processing',...
    'position',[leftMargin+pushButtonWidth+horizontalSpace bottomMargin pushButtonWidth pushButtonHeight],...
    'callback',batchCallbackHandle);
bottom=bottomMargin+pushButtonHeight+buttonGap;
backpushButtonHandle=uicontrol('Style','pushbutton',...%back button
    'units', 'normalized',... 
    'string', char(8592), 'FontSize', 24, ...%8592 - Unicode Dec(HTML)
    'position',[leftMargin bottom pushButtonWidth pushButtonHeight],...
    'callback',backCallbackHandle);
pushButtonHandle=uicontrol('Style','pushbutton',...%next step button
    'units', 'normalized',...
    'string', char(8594), 'FontSize', 24, ...%8594 - Unicode Dec(HTML)
    'position',[leftMargin+pushButtonWidth+horizontalSpace bottom pushButtonWidth pushButtonHeight],...
    'callback',forwardCallbackHandle);
bottom=bottom+textBoxHeight+verticalSpace;
% backpushButtonHandle=uicontrol('Style','pushbutton',...
%     'units', 'pixels',... 
%     'string', char(223), 'FontName', 'Wingdings', 'FontSize', 24, ...%223
%     'position',[leftMargin bottom pushButtonWidth pushButtonHeight],...
%     'callback',backCallbackHandle);

% pushButtonHandle=uicontrol('Style','pushbutton',...
%     'units', 'pixels',...
%     'string', char(224), 'FontName', 'Wingdings', 'FontSize', 24, ...%224
%     'position',[leftMargin+pushButtonWidth+horizontalSpace bottom pushButtonWidth pushButtonHeight],...
%     'callback',forwardCallbackHandle);
% bottom=bottom+textBoxHeight+30;
labelHeight = textBoxHeight*1.7;%next and back button label text boxes height

nextActionTextbox=uicontrol('Style','text',...
    'units', 'normalized',...
    'string',sprintf('\n%s',buttonLabel'),...
    'FontWeight', 'bold', ...
    'FontUnits', 'normalized',...
    'FontSize', 0.40,...
    'position',[leftMargin+pushButtonWidth+horizontalSpace bottom pushButtonWidth labelHeight]);


% %Test - 7/5
% nextActionTextbox=axes('Position', [leftMargin+pushButtonWidth+horizontalSpace bottom pushButtonWidth textBoxHeight*1.5],...
%          'Visible',  'on',...
%          'Parent',   hControlPanel);
% text(0,0.5,buttonLabel,'Units','Normalized')


%Instruction text box on the control panel - hide it temporarily (7/6)
% bottomInstruction=bottom+textBoxHeight+pushButtonHeight+verticalSpace+(editBoxHeight+verticalSpace)*7;

%instruction box no longer exists. Need to remove it later
% instructionTextbox=uicontrol('Style','text',... %instruction for each parameter 
%     'units', 'normalized',...
%     'FontSize', 10,...%11.5 - 7/6
%     'BackgroundColor', [0.94,0.94,0.94],...
%     'HorizontalAlignment','left',...
%     'position',[leftMargin+fileNameBoxWidth+horizontalSpace/2 bottomInstruction instructionBoxWidth (textBoxHeight*2+verticalSpace)*2]);
%  

backButtonTextbox=uicontrol('Style','text',...
    'units', 'normalized',...
    'string',sprintf('\n%s','Back'),... %Bring the button label down, since there is no vertical alignment in Matlab
    'FontWeight', 'bold', ...
    'FontUnits', 'normalized',...
    'FontSize', 0.40,...
    'position',[leftMargin bottom pushButtonWidth labelHeight]);

bottom=bottom+pushButtonHeight+verticalSpace;
%create edit boxes and sliders
for i=numel(oneParameterArr):-1:2 %:originally -1:4 (7/13)
    
    edit_box(i)=createEditBox(hControlPanel,i,oneParameterArr(i),...
        [leftMargin bottom editBoxWidth editBoxHeight],...
        [leftMargin+editBoxWidth+horizontalSpace bottom textBoxWidth textBoxHeight],...
        editBoxCallbackHandle); %paraExplanation is the mouse-hover help message
    hSlider(i-1) = createSlider(hControlPanel,edit_box(i),[leftMargin bottom-sliderGap  editBoxWidth+horizontalSpace+textBoxWidth sliderHeight], sliderCallbackHandle,oneParameterArr(i));  
    bottom=bottom+(editBoxHeight+verticalSpace);
end
% set(hSlider(3), 'SliderStep', [0.10, 0.10]) %nucleusOpenDiskRadius
% set(hSlider(4),'Max', 1) %areaToConvexHullRatio
% set(hSlider(8), 'SliderStep', [0.10, 0.10])%neuriteRemovalDiskRadius
% set(hSlider(11), 'SliderStep', [0.10, 0.10])%tujClosingSquareSide

% for i=3:-1:2 %commented on 7/13, merged the two for loops
%     edit_box(i)=createEditBox(hControlPanel,i,oneParameterArr(i),[leftMargin bottom editBoxWidth editBoxHeight],[leftMargin+editBoxWidth+horizontalSpace bottom textBoxWidth*1/2 textBoxHeight], editBoxCallbackHandle);
%     hSlider(i-1) = createSlider(hControlPanel,edit_box(i),[leftMargin bottom-sliderGap  editBoxWidth+horizontalSpace+textBoxWidth sliderHeight], sliderCallbackHandle);
%     bottom=bottom+(editBoxHeight+verticalSpace);
% end
bottom = bottom - verticalSpace/2;
for i= 1:-1:1  %the 1st edit box - show image file dir
    edit_box(i)=createEditBox(hControlPanel,i,oneParameterArr(i),[leftMargin bottom fileNameBoxWidth editBoxHeight],[leftMargin+fileNameBoxWidth+horizontalSpace bottom textBoxWidth textBoxHeight]);
    bottom=bottom+(editBoxHeight+buttonGap);
end

% %create a slider for the first parameter
% for k=(numel(oneParameterArr))-1:-1:1 % one fewer than edit boxes
% hSlider(k) = createSlider(h,edit_box,[leftMargin bottom editBoxWidth editBoxHeight])    
% end
% hSlider = uicontrol('Style', 'slider',...
%      'position', [leftMargin, bottomInstruction+verticalSpace+2, editBoxWidth+horizontalSpace+textBoxWidth, 15],...
%      'Min',0,'Max',10,'Value',1,...
%      'callback',sliderCallbackHandle);

quitButtonHandle=uicontrol('Style','pushbutton',...
    'units', 'normalized',...
    'string','Quit',...
    'position',[leftMargin+pushButtonWidth+horizontalSpace bottom pushButtonWidth pushButtonHeight],...
    'callback',quitCallbackHandle);

parameterButtonHandle=uicontrol('Style','pushbutton',...
    'units', 'normalized',...
    'string','Open Parameters File',...
    'position',[leftMargin bottom pushButtonWidth pushButtonHeight],...
    'callback',parameterCallbackHandle);




% set(hControlPanel, 'Position', [30, 40, totalwidth, bottom+pushButtonHeight+buttonGap])
set(hControlPanel, 'units', 'normalized', 'Position', [0.01 0.06 wControlPanel_rel hgtControlPanel_rel]);%Auto resize the window to fit the user's screen
Handles = {savepushButtonHandle,parameterButtonHandle,quitButtonHandle,backpushButtonHandle,pushButtonHandle,batchpushButtonHandle};    
end